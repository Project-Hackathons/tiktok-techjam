"use client";
import React from "react";
import Head from "next/head";
import {
  Flex,
  VStack,
  Text,
  Box,
  Image,
  Modal,
  ModalOverlay,
  ModalContent,
  ModalHeader,
  ModalFooter,
  ModalBody,
  ModalCloseButton,
  useDisclosure,
  Button,
} from "@chakra-ui/react";
import { useState } from "react";

const Rewards = () => {
  const rewardList: rewardType[] = [
    { rewardMessage: "Cashback", rewardAmount: 0.5 },
    { rewardMessage: "Tiktok Shop Voucher", rewardAmount: 5 },
    { rewardMessage: "Amazon Voucher", rewardAmount: 5 },
    { rewardMessage: "Cashback", rewardAmount: 0.6 },
    { rewardMessage: "Cashback", rewardAmount: 0.8 },
    { rewardMessage: "Tiktok Shop Voucher", rewardAmount: 3 },
    { rewardMessage: "Cashback", rewardAmount: 1 },
    { rewardMessage: "Amazon Voucher", rewardAmount: 10 },
    { rewardMessage: "Cashback", rewardAmount: 0.5 },
    { rewardMessage: "Tiktok Shop Voucher", rewardAmount: 5 },
    { rewardMessage: "Amazon Voucher", rewardAmount: 5 },
    { rewardMessage: "Cashback", rewardAmount: 0.6 },
    { rewardMessage: "Cashback", rewardAmount: 0.8 },
    { rewardMessage: "Tiktok Shop Voucher", rewardAmount: 3 },
    { rewardMessage: "Cashback", rewardAmount: 1 },
    { rewardMessage: "Amazon Voucher", rewardAmount: 10 },
  ];
  const [modalState, setModalState] = useState(rewardList.map(() => false));

  interface rewardType {
    rewardMessage: string;
    rewardAmount: number;
  }

  const handleOpen = (index: any) => {
    const newState = modalState.map((state, i) => (i === index ? true : state));
    setModalState(newState);
  };

  const handleClose = (index: any) => {
    const newState = modalState.map((state, i) =>
      i === index ? false : state
    );
    setModalState(newState);
  };

  return (
    <>
      <Head>
        <title>Rewards</title>
        {/* <meta name="description" content="Generated by create next app" /> */}
        {/* <meta name="viewport" content="width=device-width, initial-scale=1" /> */}
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex bg="#070F2B" w="100%" pb="80px">
        <VStack gap="1.5rem">
          <Flex
            w="100vw"
            justifyContent="center"
            pt="1.5rem"
            direction="column"
          >
            <Text
              textAlign="center"
              color="white"
              fontWeight="bold"
              fontSize="xl"
            >
              Total Rewards
            </Text>
            <Text pt="10px" textAlign="center" color="white" fontSize="l">
              {`You have ${rewardList.length} unopened rewards.`}
            </Text>
          </Flex>
          <Flex
            w="100%"
            justify="space-between"
            flexWrap="wrap"
            px="40px"
            rowGap="20px"
          >
            {rewardList.map((value, index) => {
              return (
                <Box key={index}>
                  <Image
                    src={`/rewards/reward${(index % 3) + 1}.avif`}
                    alt="rewardImg"
                    boxSize="150px"
                    borderRadius="20px"
                    onClick={() => handleOpen(index)}
                  />
                  <Modal
                    isOpen={modalState[index]}
                    onClose={() => handleClose(index)}
                    isCentered
                  >
                    <ModalOverlay />
                    <ModalContent mx="30px" bgColor="#070F2B" textColor="white">
                      <ModalHeader>Congratulations!</ModalHeader>
                      <ModalCloseButton />
                      <ModalBody>
                        <VStack spacing="20px">
                          <Image
                            src="/rewards/rewardLogo.svg"
                            alt="rewardLogo"
                            boxSize="50px"
                          ></Image>
                          <Text>
                            {`You have won $${value.rewardAmount} worth of ${value.rewardMessage}!`}
                          </Text>
                        </VStack>
                      </ModalBody>

                      <ModalFooter>
                        <Button
                          bgGradient="linear(to-r, #ff0050, 45%, #00f2ea)"
                          mr={3}
                          onClick={() => handleClose(index)}
                        >
                          <Text color="black" fontWeight="bold">
                            Redeem
                          </Text>
                        </Button>
                      </ModalFooter>
                    </ModalContent>
                  </Modal>
                </Box>
              );
            })}
          </Flex>
        </VStack>
      </Flex>
    </>
  );
};

export default Rewards;
